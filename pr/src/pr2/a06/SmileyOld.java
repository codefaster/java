package pr2.a06;import java.awt.Color;import java.awt.Graphics;import java.awt.Point;import lernhilfe2013ss.graphics.Drawable;public class SmileyOld implements Drawable {	int x;	int y;	int r;	int eyeSize;	int eyeAngle;	boolean smile;		public SmileyOld (int x, int y, int r, int eyeSize, int eyeAngle, boolean smile) {		this.r = r;		this.eyeSize = eyeSize;		this.eyeAngle = eyeAngle;		this.smile = smile;		this.x = x;		this.y = y;	}	public SmileyOld (int headRadius, int eyeRadius, int eyeAngle, boolean smile) {		this(0,0,headRadius,eyeRadius,eyeAngle,smile);	}		public void moveRelative(int dx, int dy) {		x+=dx;		y+=dy;	}		public void setPosition (int x, int y) {		this.x=x;		this.y=y;	}		public static Point getCenter(Point origen, int r) {		return new Point(	  		origen.x+r,	  		origen.y+r		);	}		public static Point makeCenter(Point origen, int r) {		return new Point(	  		origen.x-r/2,	  		origen.y-r/2		);	}		public static Point rotatePoint(Point origen, Point circleCenter, int angle) {		double angleD = angle * Math.PI / 180;		return new Point(			(int)Math.round((Math.cos(angle)*(origen.x-circleCenter.x)-Math.sin(angleD)*(origen.y-circleCenter.y)+circleCenter.x)),			(int)Math.round((Math.sin(angle)*(origen.x-circleCenter.x)+Math.cos(angleD)*(origen.y-circleCenter.y)+circleCenter.y))		);	}		public static Point getCircumPoint (Point origin, int radius, double angle) {		final int DEG_COMP = 90;		double angleD = (angle-DEG_COMP)*Math.PI / 180;		Point p = new Point(			(int)Math.round((origin.x+radius*Math.cos(angleD))),			(int)Math.round((origin.y+radius*Math.sin(angleD)))		);		return p;	}		public void draw(Graphics g) {		final int HEAD_D = r * 2;		final int PADDING = HEAD_D/4;		final int EYE_D = r * eyeSize / 100;		final int EYE_R = EYE_D/2;		final int EYEBALL_R = (int)Math.round(EYE_R * 0.6);		final int EYEANGLE_1 = 360-45;		final int EYEANGLE_2 = 45;		final int ROTATION = 300;		final Point ORIGIN = getCenter(new Point(x,y),r);		g.setColor(Color.ORANGE);		g.fillOval(x, y, HEAD_D, HEAD_D);		g.setColor(Color.WHITE);		// Determine Eye Location by Angle, EYE1//		Point eye1 = getCircumPoint(ORIGIN,r,270+45);		Point eye1 = getCircumPoint(ORIGIN,r,40);		eye1.move(eye1.x, eye1.y);		// Determine Eye Location by Angle, EYE2//		Point eye2 = getCircumPoint(ORIGIN,r,90-45);//		eye2.move(eye2.x-PADDING, eye2.y);		// Draw Eyes		g.drawOval(eye1.x,eye1.y,EYE_D,EYE_D);//		g.drawOval(eye2.x,eye2.y,EYE_D,EYE_D);//		// Calculate Eyeballs//		Point eyeball1 = getCenter(eye1,EYE_R);//		Point eyeball2 = getCenter(eye2,EYE_R);//		// Rotate Eyeballs////		eyeball1 = rotatePoint(eyeball1,,40);//		// Draw Eyeballs//		g.drawOval(eyeball1.x,eyeball1.y,EYEBALL_R,EYEBALL_R);//		g.drawOval(eyeball2.x,eyeball2.y,EYEBALL_R,EYEBALL_R);	}}
package pr2.a04;import java.io.File;import java.io.PrintWriter;public class DirContent {	public static void main(String[] args) {		File[] paths = {				new File("/Users/jacurrospatonio/Beuth/java.project/"),				new File("/Users/jacurrospatonio/Beuth/"),				new File("/Users/jacurrospatonio/Beuth/MD2/") };		try {			test(paths, 2);		} catch (NullPointerException e) {			System.err.println("Check Filenames in testarray.");		}	}	public static void test(File[] paths, int depth) {		PrintWriter out = new PrintWriter(System.out, true);		for (File f : paths) {			out.println("Running Test for: " + f.getName());			out.println("printAll:");			out.println("#######################################");			printAll(f, depth);			out.println();			out.println("printFilesOnly:");			out.println("#######################################");			printFilesOnly(f, depth);			out.println();			out.println("printDirsOnly:");			out.println("#######################################");			printDirsOnly(f, depth);		}	}	public static void printAll(File path, int depth) {		if (depth <= 0) {			return;		}		for (File f : path.listFiles()) {			printItem(f);			if (f.isDirectory()) {				printAll(f, depth - 1);			}		}	}	public static void printFilesOnly(File path, int depth) {		if (depth <= 0) {			return;		}		for (File f : path.listFiles()) {			printItem(f, true);			if (f.isDirectory()) {				printFilesOnly(f, depth - 1);			}		}	}	public static void printDirsOnly(File path, int depth) {		if (depth <= 0) {			return;		}		for (File f : path.listFiles()) {			printItem(f, false, true);			if (f.isDirectory()) {				printDirsOnly(f, depth - 1);			}		}	}	public static void printItem(File f) {		printItem(f, false, false);	}	public static void printItem(File f, boolean forceFile) {		printItem(f, forceFile, false);	}	public static void printItem(File f, boolean forceFile, boolean forceDir) {		PrintWriter out = new PrintWriter(System.out, true);		StringBuffer indent = new StringBuffer();		for (int i = 0; i < getDepth(f); i++) {			indent.append("  ");		}		if (f.isDirectory() && !forceFile) {			out.println(indent + "Verzeichnis> " + f.getName());		}		if (f.isFile() && !forceDir) {			out.println(indent + "Datei> " + f.getName());		}	}	public static int getDepth(File path) {		return getDepth(path, 0);	}	public static int getDepth(File path, int value) {		if (path.getParent()==null) {			return value;		}			return getDepth(path.getParentFile(), value + 1);	}}